{
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        }
    },
    "root": true,
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "airbnb",
        "next"
    ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "simple-import-sort"
    ],
    "rules": {
        "linebreak-style": 0,
        "react/no-unescaped-entities": "off",
        "@next/next/no-page-custom-font": "off",
        "semi": [
            2,
            "never"
        ],
        "react/react-in-jsx-scope": "off",
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".tsx",
                    ".ts"
                ]
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "react/jsx-props-no-spreading": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off"
    },
    "overrides": [
        {
            // enable the rule specifically for TypeScript files
            "files": [
                "*.ts",
                "*.tsx"
            ],
            "rules": {
                "@typescript-eslint/explicit-module-boundary-types": [
                    "error"
                ]
            }
        }
    ],
    "parser": "@typescript-eslint/parser"
}